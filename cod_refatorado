#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_PRODUTOS 50

typedef struct {
    int codigo;
    char nome[30];
    float preco;
} Produto;

typedef struct {
    Produto produto;
    int quantidade;
} Carrinho;

Produto *produtos = NULL;     //lista dinâmica de produtos
Carrinho *carrinho = NULL;     //lista dinâmica de itens no carrinho
int totalProdutos = 0;
int totalCarrinho = 0;

void exibirProduto(Produto prod) {
    printf("\nCodigo: %d  \nNome: %s \nPreco: R$%.2f\n", prod.codigo, prod.nome, prod.preco);
}

//uso do realloc para as listas dinâmicas
void adicionarProdutoLista(Produto produto) {
    produtos = realloc(produtos, (totalProdutos + 1) * sizeof(Produto));
    produtos[totalProdutos] = produto;
    totalProdutos++;
}

void cadastrarProduto() {
    if (totalProdutos < MAX_PRODUTOS) {
        Produto prod;
        printf("\nCadastrar Produto:\n");
        printf("Digite o codigo do produto: ");
        scanf("%d", &prod.codigo);
        printf("Digite o nome do produto: ");
        scanf("%29s", prod.nome);
        printf("Digite o preco do produto: ");
        scanf("%f", &prod.preco);

        adicionarProdutoLista(prod);
        printf("\nProduto cadastrado com sucesso!\n");
    } else {
        printf("\nLimite de produtos cadastrados atingido.\n");
    }
}

void listarProdutos() {
    if (totalProdutos == 0) {
        printf("\nNenhum produto cadastrado.\n");
    } else {
        printf("\nLista de produtos disponiveis:\n");
        for (int i = 0; i < totalProdutos; i++) {
            exibirProduto(produtos[i]);
        }
    }
}

int obterIndiceCarrinho(int codigo) {
    for (int i = 0; i < totalCarrinho; i++) {
        if (carrinho[i].produto.codigo == codigo) {
            return i;
        }
    }
    return -1;
}

Produto buscarProdutoPorCodigo(int codigo) {
    for (int i = 0; i < totalProdutos; i++) {
        if (produtos[i].codigo == codigo) {
            return produtos[i];
        }
    }
    return (Produto){-1, "", 0.0};
}

void adicionarCarrinho(Produto produto, int quantidade) {
    int indiceCarrinho = obterIndiceCarrinho(produto.codigo);
    if (indiceCarrinho == -1) {
        carrinho = realloc(carrinho, (totalCarrinho + 1) * sizeof(Carrinho));
        carrinho[totalCarrinho].produto = produto;
        carrinho[totalCarrinho].quantidade = quantidade;
        totalCarrinho++;
    } else {
        carrinho[indiceCarrinho].quantidade += quantidade;
    }
}

void comprarProduto() {
    int codigo, quantidade;
    printf("\nComprar Produto:\n");
    printf("Digite o codigo do produto: ");
    scanf("%d", &codigo);

    Produto produto = buscarProdutoPorCodigo(codigo);

    if (produto.codigo != -1) {
        printf("Digite a quantidade: ");
        scanf("%d", &quantidade);

        adicionarCarrinho(produto, quantidade);
        printf("\nProduto adicionado ao carrinho.\n");
    } else {
        printf("\nProduto nao encontrado.\n");
    }
}

void visualizarCarrinho() {
    if (totalCarrinho == 0) {
        printf("\nO carrinho esta vazio.\n");
    } else {
        printf("\nCarrinho de compras:\n");
        for (int i = 0; i < totalCarrinho; i++) {
            Carrinho item = carrinho[i];
            float subtotal = item.quantidade * item.produto.preco;
            printf("\nCodigo: %d \nProduto: %s \nQuantidade: %d \nPreco unitario: R$%.2f \nTotal: R$%.2f\n",
                   item.produto.codigo, item.produto.nome, item.quantidade, item.produto.preco, subtotal);
        }
    }
}

void removerProdutoDoCarrinho() {
    if (totalCarrinho == 0) {
        printf("\nO carrinho esta vazio, nada a ser removido.\n");
        return;
    }

    int codigo;
    printf("Digite o codigo do produto que deseja remover: ");
    scanf("%d", &codigo);

    int indiceCarrinho = obterIndiceCarrinho(codigo);
    if (indiceCarrinho != -1) {
        for (int i = indiceCarrinho; i < totalCarrinho - 1; i++) {
            carrinho[i] = carrinho[i + 1];
        }
        totalCarrinho--;
        printf("\nProduto removido do carrinho com sucesso.\n");
    } else {
        printf("\nProduto nao encontrado no carrinho.\n");
    }
}

void fecharPedido() {
    if (totalCarrinho == 0) {
        printf("\nO carrinho esta vazio.\n");
    } else {
        float total = 0;
        printf("\nFatura:\n");
        for (int i = 0; i < totalCarrinho; i++) {
            Carrinho item = carrinho[i];
            float subtotal = item.quantidade * item.produto.preco;
            printf("\nCodigo: %d \nProduto: %s \nPreco unitario: R$%.2f \nQuantidade: %d \nTotal: R$%.2f\n",
                   item.produto.codigo, item.produto.nome, item.produto.preco, item.quantidade, subtotal);
            total += subtotal;
        }
        printf("Valor total da compra: R$%.2f\n", total);

        totalCarrinho = 0;
        free(carrinho);
        carrinho = NULL;
        printf("\nCompra finalizada com sucesso! O carrinho foi esvaziado.\n");
    }
}

void menu() {
    int opcao;
    do {
        printf("\nMENU:\n");
        printf("1. Cadastrar Produto\n2. Listar Produtos\n3. Comprar Produto\n4. Visualizar Carrinho\n");
        printf("5. Remover produto do carrinho\n6. Fechar Pedido\n7. Sair\nEscolha uma opcao: ");
        scanf("%d", &opcao);

        switch (opcao) {
            case 1:
                cadastrarProduto();
                break;
            case 2:
                listarProdutos();
                break;
            case 3:
                comprarProduto();
                break;
            case 4:
                visualizarCarrinho();
                break;
            case 5:
                removerProdutoDoCarrinho();
                break;
            case 6:
                fecharPedido();
                break;
            case 7:
                printf("\nSaindo do sistema...\n");
                break;
            default:
                printf("\nOpcao invalida.\n");
        }
    } while (opcao != 7);
}

int main() {
    produtos = malloc(0);
    carrinho = malloc(0);
    menu();
    free(produtos);
    free(carrinho);
    return 0;
}

